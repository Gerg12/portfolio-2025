{"version":3,"sources":["scripts.js"],"names":["initializeImageRotation","images","length","classList","currentIndex","card","querySelectorAll","setInterval","remove","floor","randomInterval","add","updateCartCount","jQuery","document","body","on","ajax","url","wc_cart_fragments_params","wc_ajax_url","toString","replace","type","success","data","ready","$","each","fragments","key","value","replaceWith","element","className","top_of_element","bottom_of_element","scrollTop","this","outerHeight","top_of_window","bottom_of_window","window","addClass","removeClass","console","log","click","event","preventDefault","hrefValue","attr","toggle","handleScroll","scroll","toggleClass","e","slick","dots","arrows","autoplay","autoplaySpeed","cards","header","addEventListener","scrollY","querySelector"],"mappings":"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","file":"scripts.js","sourcesContent":["jQuery(document).ready(function($) {\n\tconsole.log('ready2');\n\t$('.calendar-button a').click(function(event) {\n     // Prevent the default behavior of the link\n\t\t event.preventDefault();\n\n\t\t // Get the href value\n\t\t var hrefValue = $(this).attr('href');\n\n\t\t // Log the href value to the console (you can use it as needed)\n\t\t console.log(hrefValue);\n\n\t\t$(hrefValue).toggle();\n\t});\n\thandleScroll('.fadein', 'faded');\n\thandleScroll('.fadeinleft', 'faded-left');\n\thandleScroll('.fadeinright', 'faded-right');\n\n\t$(window).scroll(function() {\n\t\thandleScroll('.fadein', 'faded');\n\t\thandleScroll('.fadeinleft', 'faded-left');\n\t\thandleScroll('.fadeinright', 'faded-right');\n\t});\n\n\tfunction handleScroll(element, className) {\n\t\t$(element).each(function() {\n\t\t\tvar top_of_element = $(this).offset().top;\n\t\t\tvar bottom_of_element = top_of_element + $(this).outerHeight();\n\t\t\tvar top_of_window = $(window).scrollTop();\n\t\t\tvar bottom_of_window = top_of_window + $(window).height();\n\n\t\t\tif (bottom_of_window > top_of_element && top_of_window < bottom_of_element) {\n\t\t\t\t$(this).addClass(className);\n\t\t\t} else {\n\t\t\t\t$(this).removeClass(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t$('.mobile-menu__button').click(function(e) {\n\t\tconsole.log('clicked');\n\t\te.preventDefault();\n\t\t$('.mobile-menu-overlay').toggleClass('overlay-active');\n\t\t$('.mobile-menu').toggleClass('menu-open');\n        $('html').toggleClass('menu-open');\n\t});\n\t$('.close-button, .mobile-menu-overlay, .mobile-menu-bg-overlay').click(function(e) {\n\t\te.preventDefault();\n\t\t$('.mobile-menu-overlay').removeClass('overlay-active');\n\t\t$('.mobile-menu').removeClass('menu-open');\n        $('html').removeClass('menu-open');\n\t});\n\n\t$('.hero-slider > .wp-block-group__inner-container').slick({\n\t\t// Your slick options here\n\t\tdots: true,\n\t\tarrows: true,\n\t\tautoplay: true,\n\t\tautoplaySpeed: 5000,\n\t\t// etc.\n\t});\n});\n\nfunction initializeImageRotation() {\n    const cards = document.querySelectorAll('.flex-cards__item-inner');\n    \n    cards.forEach(card => {\n        const images = card.querySelectorAll('.flex-cards__image');\n        \n        // Only proceed if we have multiple images\n        if (images && images.length > 1) {\n            let currentIndex = 0;\n            images[0].classList.add('active'); // Ensure first image is visible\n            \n            // Generate random interval between 2000ms (2s) and 5000ms (5s)\n            const randomInterval = Math.floor(Math.random() * (5000 - 2000 + 1) + 2000);\n            \n            setInterval(() => {\n                // Remove active class from current image\n                images[currentIndex].classList.remove('active');\n                \n                // Move to next image\n                currentIndex = (currentIndex + 1) % images.length;\n                \n                // Add active class to next image\n                images[currentIndex].classList.add('active');\n            }, randomInterval); // Random speed for each card\n        } else if (images && images.length === 1) {\n            // If only one image, make sure it's visible\n            images[0].classList.add('active');\n        }\n    });\n}\n\n// Initialize when document is ready\njQuery(document).ready(function($) {\n    initializeImageRotation();\n});\n\n// Re-initialize when new content might be loaded\njQuery(document).on('ajaxComplete', function() {\n    initializeImageRotation();\n});\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const header = document.querySelector('#masthead');\n  \n  const handleScroll = () => {\n    if (window.scrollY > 100) {\n      header.classList.add('sticky');\n    } else {\n      header.classList.remove('sticky');\n    }\n  };\n\n  // Initial check in case page is loaded scrolled down\n  handleScroll();\n  \n  // Add scroll event listener\n  window.addEventListener('scroll', handleScroll);\n});\n\n// Update cart count\nfunction updateCartCount() {\n    if (typeof wc_cart_fragments_params === 'undefined') {\n        return;\n    }\n\n    jQuery(document.body).on('added_to_cart removed_from_cart', function() {\n        jQuery.ajax({\n            url: wc_cart_fragments_params.wc_ajax_url.toString().replace('%%endpoint%%', 'get_refreshed_fragments'),\n            type: 'POST',\n            success: function(data) {\n                if (data && data.fragments) {\n                    jQuery.each(data.fragments, function(key, value) {\n                        jQuery(key).replaceWith(value);\n                    });\n                }\n            }\n        });\n    });\n}\n\n// Initialize cart count updates\njQuery(document).ready(function($) {\n    updateCartCount();\n});"]}